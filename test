#!/bin/bash

cargo build
source ~/.autoenv-rs/autoenv_rs_cd

TEST_DIR=`pwd`/bash_tests

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

expect() {
	case "$AUTOENV_RS_TEST" in
		$1)
			RES=true
			;;
		*)
			RES=false
			;;
	esac
	display_result $RES
}

expect_dir() {
	if [ `pwd` = "$1" ]; then
		display_result true
	else
		display_result false
	fi
}

display_result() {
	SPACING=71
	dir_size=${#TEST_NAME}
	spaces=`printf ' %.0s' $(seq 1 1 $(($SPACING-$dir_size)))`
	if $1; then
		echo -e "${TEST_NAME}: ${spaces}${GREEN}SUCCESS${NC}"
	else
		# additional space to align with SUCCESS
		echo -e "${TEST_NAME}: ${spaces}${RED} FAILED${NC}"
	fi
}

TEST_NAME=
DEFINE() {
	TEST_NAME=$1
	echo `printf -- '-%.0s' {1..80}`
}


#=========================================
#                 TESTS                  | 
#=========================================


#===================================
DEFINE on_load
#===================================
(
builtin cd ${TEST_DIR}/${TEST_NAME}
expected_dir=`pwd`

export AUTOENV_RS_TEST=

# source ~/.bashrc # FIXME: works in the terminal, not here
source ~/.autoenv-rs/autoenv_rs_cd

expect_dir $expected_dir
expect 'loaded'
)


#===================================
DEFINE on_load/nested
#===================================
(
builtin cd ${TEST_DIR}/${TEST_NAME}

export AUTOENV_RS_TEST=

# source ~/.bashrc # FIXME: works in the terminal, not here
source ~/.autoenv-rs/autoenv_rs_cd
expect 'loaded/nested'
)


#===================================
DEFINE cd
#===================================
(
__autoenv_rs_cd__
expect_dir $HOME
)


#===================================
DEFINE cd-dash
#===================================
(
expected=`pwd`
__autoenv_rs_cd__
expect_dir $HOME
__autoenv_rs_cd__ - &> /dev/null
expect_dir "$expected"
)


#===================================
DEFINE in_out
#===================================
(
__autoenv_rs_cd__ ${TEST_DIR}/${TEST_NAME}
expect '_loaded_'

export AUTOENV_RS_TEST=

__autoenv_rs_cd__ ${TEST_DIR}
expect '_unloaded_'
)


#===================================
DEFINE in_out/nested
#===================================
(
__autoenv_rs_cd__ ${TEST_DIR}/${TEST_NAME}
expect '_loaded__nested_'

export AUTOENV_RS_TEST=

__autoenv_rs_cd__ ${TEST_DIR}
expect '_unnested__unloaded_'
)


#===================================
DEFINE n/o/e/n/v/n/e/s/t/e/d/f/o/l/d/e/r
#===================================
(
echo ${TEST_NAME}:
echo in ----------------
time __autoenv_rs_cd__ ${TEST_DIR}/${TEST_NAME}

echo
echo out ---------------
time __autoenv_rs_cd__ ${TEST_DIR}
)


#===================================
DEFINE v/e/r/y/n/e/s/t/e/d/f/o/l/d/e/r/s
#===================================
(
echo ${TEST_NAME}:
echo in ----------------
time __autoenv_rs_cd__ ${TEST_DIR}/${TEST_NAME}

echo
echo out ---------------
time __autoenv_rs_cd__ ${TEST_DIR}
)


#===================================
DEFINE d/v/e/r/y/n/e/s/t/e/d/f/o/l/d/e/r/s
#===================================
(
echo /v/e/r/y/n/e/s/t/e/d/f/o/l/d/e/r/s to ${TEST_NAME}:
echo in ----------------
time __autoenv_rs_cd__ ${TEST_DIR}/v/e/r/y/n/e/s/t/e/d/f/o/l/d/e/r/s

echo
echo out ---------------
time __autoenv_rs_cd__ ${TEST_DIR}/${TEST_NAME}
)
